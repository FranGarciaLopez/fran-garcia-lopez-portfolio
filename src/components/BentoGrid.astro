---
interface ProjectImages {
    project_images: string[];
}

const { project_images } = Astro.props as {
    project_images: ProjectImages["project_images"];
};
---

<section
    class="w-full max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-12 gap-5 pt-2"
>
    {
        project_images.map((image, index) => (
            <div
                class={`rounded-lg overflow-hidden relative flex
                    ${
                        index === 1 || index === 4
                            ? "col-span-6 row-span-2 lg:col-span-6 lg:row-span-2" // Portrait images (taller)
                            : "col-span-6 lg:col-span-6" // Landscape images (wider)
                    }`}
                data-scroll
            >
                <img
                    src={image}
                    alt={`Nuclio Project Image ${index + 1}`}
                    class="w-full h-auto sm:h-full object-contain sm:object-cover"
                    draggable="false"
                />
            </div>
        ))
    }
</section>

<script>
    document.addEventListener("astro:page-load", () => {
        if (
            typeof gsap === "undefined" ||
            typeof ScrollTrigger === "undefined"
        ) {
            console.error("GSAP or ScrollTrigger not loaded.");
            return;
        }

        gsap.registerPlugin(ScrollTrigger);

        gsap.utils.toArray("[data-scroll]").forEach((element) => {
            gsap.fromTo(
                element,
                { opacity: 0, y: 20 },
                {
                    opacity: 1,
                    y: 0,
                    duration: 0.5,
                    ease: "power2.out",
                    scrollTrigger: {
                        trigger: element,
                        start: "top 90%",
                        end: "top 50%",
                        toggleActions: "play none none reverse",
                    },
                },
            );
        });
    });
</script>
