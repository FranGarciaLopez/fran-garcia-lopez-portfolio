---
import projectData from "../data/projects.json";
const { lang } = Astro.props as { lang: "es" | "en" };
const professional = projectData.professional;
const projects = projectData.projects;

const labels = {
  professional:
    lang === "es" ? "Experiencia Profesional" : "Professional Experience",
  projects: lang === "es" ? "Proyectos Destacados" : "Selected Projects",
  role: lang === "es" ? "Rol" : "Role",
  timeframe: lang === "es" ? "Periodo" : "Timeframe",
  tech: lang === "es" ? "Tecnologías" : "Technologies",
  view: lang === "es" ? "Ver detalles" : "View details",
};

function firstParagraph(item) {
  const arr = item.description?.[lang] || item.description?.en || [];
  return arr[0]?.text || "";
}

function techList(item) {
  const groups = Object.keys(item.technologies || {});
  const flat = groups.flatMap((g) => item.technologies[g]);
  return flat.slice(0, 6).join(" · ");
}
---

<section
  id="professional-experience"
  class="flex flex-col w-full px-6 md:px-16 lg:px-24 xl:px-32 mb-20 mx-auto max-w-7xl"
>
  <h2
    class="text-4xl md:text-5xl font-serif tracking-wide text-[#c2b280] mb-10"
  >
    {labels.professional}
  </h2>
  <div class="flex flex-col gap-16">
    {professional.map((item, index) => {
      const name = item.name[lang] || item.name.en;
      const desc = firstParagraph(item);
      return (
        <div
          class={`relative w-full flex flex-col md:grid md:grid-cols-2 gap-8 items-start ${index % 2 === 1 ? "md:direction-rtl" : ""}`}
          data-scroll
        >
          <a
            class={`relative w-full aspect-video rounded-2xl overflow-hidden group ring-1 ring-white/10 bg-black/30 backdrop-blur project-image ${index % 2 === 1 ? "md:order-2" : ""}`}
            href={`/${lang}/professional/${item.id}/`}
            style={`view-transition-name: project-${item.id};`}
          >
            <img
              src={item["bg-image"]}
              alt={name}
              loading="lazy"
              class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/25 to-transparent opacity-80 group-hover:opacity-90 transition-opacity" />
            <span class="absolute bottom-4 left-5 text-xs tracking-wide px-3 py-1.5 rounded-full bg-white/10 backdrop-blur text-[#e3d8b0] ring-1 ring-white/15">
              {labels.professional}
            </span>
          </a>

          <div class={`relative max-w-xl ${index % 2 === 1 ? "md:order-1" : ""}`}>
            <h3 class="text-3xl md:text-4xl font-serif tracking-wide leading-snug text-[#c2b280] mb-4">
              {name}
            </h3>
            <div class="flex flex-wrap items-center gap-x-4 gap-y-1 text-xs uppercase tracking-wide text-neutral-400 mb-4">
              <span>
                {labels.role}:{" "}
                <strong class="font-medium text-neutral-200">
                  {item.role?.[lang] || item.role?.en}
                </strong>
              </span>
              <span class="opacity-50">|</span>
              <span>
                {labels.timeframe}:{" "}
                <strong class="font-medium text-neutral-200">
                  {item.timeframe?.[lang] || item.timeframe?.en}
                </strong>
              </span>
            </div>
            <p class="text-sm md:text-base text-neutral-300 leading-relaxed mb-4">
              {desc}
            </p>
            <p class="text-xs md:text-sm text-neutral-400 mb-5">
              {techList(item)}
            </p>
            <div class="flex flex-wrap gap-3">
              <a
                href={`/${lang}/professional/${item.id}/`}
                class="inline-flex items-center gap-2 text-xs md:text-sm px-4 py-2 rounded-full bg-[#c2b280]/20 hover:bg-[#c2b280]/30 text-[#e3d8b0] ring-1 ring-[#c2b280]/30 transition-colors"
              >
                {labels.view}
                <svg
                  width="16"
                  height="16"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="1.5"
                >
                  <path
                    d="M4 12L12 4M12 4H6M12 4v6"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </a>
              {item.url && (
                <a
                  href={item.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center gap-2 text-xs md:text-sm px-4 py-2 rounded-full bg-white/5 hover:bg-white/10 text-neutral-200 ring-1 ring-white/10 transition-colors"
                >
                  Live
                </a>
              )}
            </div>
          </div>
        </div>
      );
    })}
  </div>
</section>


<section id="projects" class="flex flex-col w-full px-6 md:px-16 lg:px-24 xl:px-32 mb-20 mx-auto max-w-7xl">
  <h2
    class="text-4xl md:text-5xl font-serif tracking-wide text-[#c2b280] mb-10"
  >
    {labels.projects}
  </h2>
  <div class="flex flex-col gap-16">
    {
      projects.map((project, index) => {
        const projectName = project.name[lang] || project.name.en;
        const desc = firstParagraph(project);
        return (
          <div
            class={`relative w-full flex flex-col md:grid md:grid-cols-2 gap-8 items-start ${index % 2 === 1 ? "md:direction-rtl" : ""}`}
            data-scroll
          >
            <a
              class={`relative w-full aspect-video rounded-2xl overflow-hidden group ring-1 ring-white/10 bg-black/30 backdrop-blur project-image
              ${index % 2 === 1 ? "md:order-2" : ""}`}
              href={`/${lang}/projects/${project.id}/`}
              style={`view-transition-name: project-${project.id};`}
            >
              <img
                src={project["bg-image"]}
                alt={projectName}
                loading="lazy"
                class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/25 to-transparent opacity-80 group-hover:opacity-90 transition-opacity" />
              <span class="absolute bottom-4 left-5 text-xs tracking-wide px-3 py-1.5 rounded-full bg-white/10 backdrop-blur text-[#e3d8b0] ring-1 ring-white/15">
                {project.role?.[lang] || project.role?.en}
              </span>
            </a>

            <div
              class={`relative max-w-xl ${index % 2 === 1 ? "md:order-1" : ""}`}
            >
              <h3 class="text-3xl md:text-4xl font-serif tracking-wide leading-snug text-[#c2b280] mb-4">
                {projectName}
              </h3>
              <p class="text-sm md:text-base text-neutral-300 leading-relaxed mb-4">
                {desc}
              </p>
              <p class="text-xs md:text-sm text-neutral-400 mb-5">
                {techList(project)}
              </p>
              <div class="flex flex-wrap gap-3">
                <a
                  href={`/${lang}/projects/${project.id}/`}
                  class="inline-flex items-center gap-2 text-xs md:text-sm px-4 py-2 rounded-full bg-[#c2b280]/20 hover:bg-[#c2b280]/30 text-[#e3d8b0] ring-1 ring-[#c2b280]/30 transition-colors"
                >
                  {labels.view}
                  <svg
                    width="16"
                    height="16"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="1.5"
                  >
                    <path
                      d="M4 12L12 4M12 4H6M12 4v6"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    />
                  </svg>
                </a>
                {project.url && (
                  <a
                    href={project.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center gap-2 text-xs md:text-sm px-4 py-2 rounded-full bg-white/5 hover:bg-white/10 text-neutral-200 ring-1 ring-white/10 transition-colors"
                  >
                    Live
                  </a>
                )}
                {project.github_repositories?.[0] && (
                  <a
                    href={project.github_repositories[0]}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center gap-2 text-xs md:text-sm px-4 py-2 rounded-full bg-white/5 hover:bg-white/10 text-neutral-200 ring-1 ring-white/10 transition-colors"
                  >
                    GitHub
                  </a>
                )}
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
</section>

<script>
  document.addEventListener("astro:page-load", () => {
    if (typeof gsap === "undefined" || typeof ScrollTrigger === "undefined")
      return;
    gsap.registerPlugin(ScrollTrigger);
    gsap.utils.toArray("[data-scroll]").forEach((el) => {
      gsap.fromTo(
        el,
        { opacity: 0, y: 28 },
        {
          opacity: 1,
          y: 0,
          duration: 0.7,
          ease: "power2.out",
          scrollTrigger: {
            trigger: el,
            start: "top 85%",
            end: "top 55%",
            toggleActions: "play none none reverse",
          },
        },
      );
    });
  });
</script>
