---
interface AlgorithmFeature {
  description: string;
  benefits?: string[];
  steps?: string[];
}

interface AlgorithmFeatures {
  [key: string]: AlgorithmFeature;
}

const { algorithm_features } = Astro.props as {
  algorithm_features: AlgorithmFeatures;
};
---

<div class="algorithm-section">
  <h2 class="algorithm-title">
    Algorithm <span class="algorithm-title-highlight">Features</span>
  </h2>
  {
    Object.entries(algorithm_features).map(([key, feature]) => (
      <div class="feature-card" key={key}>
        <h3 class="feature-heading">{key.replace(/_/g, " ")}</h3>
        <p class="feature-description">{feature.description}</p>

        {feature.benefits && (
          <ul class="feature-list">
            {feature.benefits.map((benefit, index) => (
              <li class="feature-list-item" key={index}>
                {benefit}
              </li>
            ))}
          </ul>
        )}

        {feature.steps && (
          <ul class="feature-list">
            {feature.steps.map((step, index) => (
              <li class="feature-list-item" key={index}>
                {step}
              </li>
            ))}
          </ul>
        )}
      </div>
    ))
  }
</div>
